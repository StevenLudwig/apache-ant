<project name="HelloWorld" basedir="." default="main">

    <property name="src.dir" value="src"/>

    <property name="build.dir" value="build"/>
    <property name="classes.dir" value="${build.dir}/classes"/>
    <property name="jar.dir" value="${build.dir}/jar"/>
    <property name="file.jar" value="${ant.project.name}.jar"/>

    <property name="main-class" value="sl.HelloWorld"/>

    <property name="lib.dir" value="lib"/>

    <path id="classpath">
        <fileset dir="${lib.dir}" includes="**/*.jar"/>
    </path>


    <target name="clean">
        <delete dir="${build.dir}"/>
    </target>

    <target name="compile">
        <mkdir dir="${classes.dir}"/>
        <javac srcdir="${src.dir}" destdir="${classes.dir}" classpathref="classpath"/>
        <copy todir="${classes.dir}">
            <fileset dir="${src.dir}" excludes="**/*.java"/>
        </copy>
    </target>

    <target name="jar" depends="compile">
        <mkdir dir="${jar.dir}"/>
        <jar destfile="${jar.dir}/${file.jar}" basedir="${classes.dir}">
            <manifest>
                <attribute name="Main-Class" value="${main-class}"/>
            </manifest>
        </jar>
    </target>

    <target name="run" depends="jar">
        <!-- <java jar="${jar.dir}/${ant.project.name}.jar" fork="true"/>  if you are not using libs-->
        <!-- java -cp "${jar.dir}/${file.jar}:${lib.dir}/*" "${main-class}"  If you are working with libraries -->
        <!-- java -cp "build/jar/HelloWorld.jar:lib/*" "sl.HelloWorld"  If you are working with libraries -->
        <java fork="true" classname="${main-class}">
            <classpath>
                <path refid="classpath"/>
                <path location="${jar.dir}/${file.jar}"/>
            </classpath>
        </java>
    </target>

    <target name="clean-build" depends="clean,jar"/>
    <target name="main" depends="clean,run"/>

</project>
